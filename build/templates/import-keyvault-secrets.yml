parameters:
  azureServiceConnection: ''

steps:
  - task: AzureCLI@2
    displayName: 'Import secrets from Azure Key Vault'
    inputs:
      azureSubscription: '${{ parameters.azureServiceConnection }}'
      addSpnToEnvironment: true
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
        Install-Module -Name Arcus.Scripting.DevOps -AllowClobber -MinimumVersion 1.3.0

        $subscriptionId = (az account show | ConvertFrom-Json).id
        Set-AzDevOpsVariable -Name 'Arcus.Templates.TenantId' -Value $env:tenantId -AsSecret
        Set-AzDevOpsVariable -Name 'Arcus.Templates.ServicePrincipal.ClientId' -Value $env:servicePrincipalId -AsSecret
        Set-AzDevOpsVariable -Name 'Arcus.Templates.ServicePrincipal.ClientSecret' -Value $env:servicePrincipalKey -AsSecret

        $connectionStringSecret = az keyvault secret show --name $env:ARCUS_TEMPLATES_APPLICATIONINSIGHTS_CONNECTIONSTRING_SECRETNAME --vault-name $env:ARCUS_TEMPLATES_KEYVAULT_NAME | ConvertFrom-Json
        Set-AzDevOpsVariable -Name 'Arcus.Templates.ApplicationInsights.ConnectionString' -Value $connectionStringSecret.value -AsSecret

        $workspaceIdSecret = az keyvault secret show --name $env:ARCUS_TEMPLATES_APPLICATIONINSIGHTS_LOGANALYTICS_WORKSPACEID_SECRETNAME --vault-name $env:ARCUS_TEMPLATES_KEYVAULT_NAME | ConvertFrom-Json
        Set-AzDevOpsVariable -Name 'Arcus.Templates.ApplicationInsights.ConnectionString' -Value $workspaceIdSecret.value -AsSecret